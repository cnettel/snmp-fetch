language: python
cache:
  pip: true
git:
  depth: 1

env:
  global:
  - NETFRAME_COVERAGE=1

jobs:
  include:
    - name: "linux-x86_64-3.7-gcc8"
      os: linux
      python: 3.7.4
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - CC=gcc-8
          CXX=g++-8
          COV=gcov-8
    - name: "linux-x86_64-3.8-gcc8"
      os: linux
      python: 3.8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - CC=gcc-8 CXX=g++-8 COV=gcov-8

      
before_install:
  - sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
  - sudo ln -s "/usr/bin/${CC}" /usr/local/bin/gcc
  - sudo ln -s "/usr/bin/${CXX}" /usr/local/bin/g++

install:
  - virtualenv -p python${TRAVIS_PYTHON_VERSION} ENV
  - source ENV/bin/activate
  - pip install --upgrade pip
  - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
  - if [[ $TRAVIS_PYTHON_VERSION == 3.8 ]]; ln -s ~/.poetry/lib/poetry/_vendor/py3.7 ~/.poetry/lib/poetry/_vendor/py3.8; fi  # temp fix
  - mkdir -p build/temp.linux-x86_64-${TRAVIS_PYTHON_VERSION}
  - pushd build/temp.linux-x86_64-${TRAVIS_PYTHON_VERSION}
  - cmake ../.. && make VERBOSE=1 all # force build output hidden by poetry
  - popd
  - poetry install -vvv
  - pip install cpp-coveralls python-coveralls

script:
  #- poetry run pylint snmp_fetch tests
  #- poetry run flake8 snmp_fetch tests
  #- poetry run mypy -p snmp_fetch -p tests  # TODO virtual environment
  #- poetry run bandit -r snmp_fetch
  - poetry run pytest -v tests/api/test_snmp_config.py --cov

after_success:
  - cpp-coveralls --gcov="${COV}" -b build/temp.linux-x86_64-${TRAVIS_PYTHON_VERSION}/CMakeFiles/api.dir/snmp_fetch/api/ --gcov-options '\-lp' -i snmp_fetch/api --dump cpp-coveralls.json 
  - coveralls --merge_file cpp-coveralls.json
